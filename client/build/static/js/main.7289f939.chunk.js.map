{"version":3,"sources":["logo.svg","Components/SearchBooks.js","Components/SavedBooks.js","Components/NoMatch.js","Components/Navbar.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","API_KEY","process","SearchBooks","useState","book","setBook","result","setResult","onClick","event","preventDefault","axios","post","then","console","log","catch","error","className","onSubmit","get","data","items","onChange","target","value","placeholder","type","map","Card","style","Img","variant","src","undefined","volumeInfo","imageLinks","thumbnail","alt","title","Body","authors","description","href","infoLink","SavedBooks","state","results","res","setState","this","image","link","Component","NoMatch","role","aria-label","Nav","to","window","location","pathname","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7289f939.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","import React, { useState, Component } from \"react\";  \nimport axios from 'axios';  import { Card } from 'react-bootstrap';  \n// const router = require(\"express\").Router();\n// const Books = require(\"../../models/books.js\");\n\n\nconst API_KEY = `${process.env.REACT_APP_GOOGLE_API_KEY}`\nfunction SearchBooks() {  \n    const [book, setBook] = useState(\"\");  \n    const [result, setResult] = useState([]);  \n  \n    function handleChange(event) {  \n        const book = event.target.value;  \n        setBook(book);  \n    }  \n    function handleFormSubmit(event) {  \n        event.preventDefault();  \n        axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + book + \"&key=\" + API_KEY + \"&maxResults=40\")  \n            .then(data => {  \n                console.log(data.data.items);  \n                setResult(data.data.items);  \n            })  \n    }  \n\n    function onClick(event) {\n        \n            event.preventDefault();\n        \n        axios\n            .post('/api/submit', {\n                \n            })\n            .then(console.log(\"Posted succesfully\"))\n            .catch(error => console.log(error))\n    }\n    return (  \n       <div>\n           <div className=\"jumbotron jumbotron-fluid\">\n          <div className=\"container\">\n            <h1 className=\"display-4\">Google Books Search</h1>\n            <p className=\"lead\">\n              Search for and Save Books of Interest\n            </p>\n          </div>\n        </div>\n        {/* <SearchForm> */}\n        <form onSubmit={handleFormSubmit}>  \n            <div className=\"card-header main-search\">  \n                <div className=\"row\">  \n                    <div className=\"col-12 col-md-3 col-xl-3\">  \n                        <input onChange={handleChange} className=\"AutoFocus form-control\" placeholder=\"Type something...\" type=\"text\" />  \n                    </div>  \n                    <div className=\"ml-auto\">  \n                        <input type=\"submit\" value=\"Search\" className=\"btn btn-primary search-btn\" />  \n                    </div>  \n                </div>  \n            </div>  \n            <div className=\"container\">  \n                <div className=\"row\">  \n                    {result.map(book => (  \n                          \n                            <Card style={{ 'marginTop': '10px' }}>  \n                              <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                <Card.Img variant=\"top\" src={book.volumeInfo.imageLinks !== undefined ? book.volumeInfo.imageLinks.thumbnail : ''} alt={book.title} />  \n                                </div>\n                                <div className=\"col-lg-8\">\n                                <Card.Body>  \n                                    <h3 className=\"card-title\">{book.volumeInfo.title}</h3>  \n                                    <h5 className=\"card-title\">Written by: {book.volumeInfo.authors}</h5> \n                                    <h6 className=\"card-title\">{book.volumeInfo.description}</h6> \n                                    <a className=\"btn btn-primary mx-2\"onClick={onClick}>Favorite</a>  \n                                    <a className=\"btn btn-primary mx-2\" href={book.volumeInfo.infoLink}>View Details</a>  \n                                </Card.Body>  \n                                </div> \n                                </div>\n                            </Card>  \n                         \n                    ))}  \n                </div>  \n            </div>  \n            {/* </SearchForm> */}\n        </form> \n       </div>\n    );\n}\n  \nexport default SearchBooks  ","import axios from \"axios\";\r\nimport React, { useState, Component } from \"react\";  \r\nimport { Card } from 'react-bootstrap';  \r\n\r\n\r\nclass SavedBooks extends Component {\r\n    state = {\r\n        results: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/all')\r\n        .then(res => {\r\n            this.setState({results: res.data });\r\n        })\r\n    }\r\n  render() {\r\n    return (  \r\n       <div>\r\n           <div className=\"jumbotron jumbotron-fluid\">\r\n          <div className=\"container\">\r\n            <h1 className=\"display-4\">Google Books Search</h1>\r\n            <p className=\"lead\">\r\n              Saved Books\r\n            </p>\r\n          </div>\r\n        </div>\r\n       \r\n        <form>  \r\n            <div className=\"card-header main-search\">  \r\n                <div className=\"row\">  \r\n                    <div className=\"col-12 col-md-3 col-xl-3\">  \r\n                        <input className=\"AutoFocus form-control\" placeholder=\"Type something...\" type=\"text\" />  \r\n                    </div>  \r\n                    <div className=\"ml-auto\">  \r\n                        <input type=\"submit\" value=\"Search\" className=\"btn btn-primary search-btn\" />  \r\n                    </div>  \r\n                </div>  \r\n            </div>  \r\n            <div className=\"container\">  \r\n                <div className=\"row\">  \r\n                    {this.setState.results.map(book => (  \r\n                          \r\n                            <Card style={{ 'marginTop': '10px' }}>  \r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                <Card.Img variant=\"top\" src={book.image} alt={book.title} />  \r\n                                </div>\r\n                                <div className=\"col-lg-8\">\r\n                                <Card.Body>  \r\n                                    <h3 className=\"card-title\">{book.title}</h3>  \r\n                                    <h5 className=\"card-title\">Written by: {book.authors} </h5> \r\n                                    <h6 className=\"card-title\">{book.description}</h6> \r\n                                    <a className=\"btn btn-primary mx-2\">Favorite</a>  \r\n                                    <a className=\"btn btn-primary mx-2\" href={book.link} >View Details</a>  \r\n                                </Card.Body>  \r\n                                </div> \r\n                                </div>\r\n                            </Card>  \r\n                         \r\n                 ))} \r\n                </div>  \r\n            </div>  \r\n \r\n        </form> \r\n       </div>\r\n    );\r\n  }\r\n}\r\n  \r\nexport default SavedBooks  ","import React from \"react\";\n// import { Col, Row, Container } from \"../components/Grid\";\n// import Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    // <Container fluid>\n    //   <Row>\n    //     <Col size=\"md-12\">\n    //       <Jumbotron>\n    <div>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n            </div>\n    //       </Jumbotron>\n    //     </Col>\n    //   </Row>\n    // </Container>\n  );\n};\nexport default NoMatch;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <div className=\"container bg-light text-dark\">\r\n      <div className=\"row justify-content-center\">\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n          <div className=\"col-6 d-flex justify-content-start\">\r\n            <div>\r\n              <ul className=\"nav nav-pills\">\r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    to=\"/\"\r\n                    className={\r\n                      window.location.pathname === \"/\"\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                  >\r\n                    Search\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    to=\"/SavedBooks\"\r\n                    className={\r\n                      window.location.pathname === \"/SavedBooks\"\r\n                        ? \"nav-link active\"\r\n                        : \"nav-link\"\r\n                    }\r\n                  >\r\n                    Saved Books\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport SearchBooks from \"./Components/SearchBooks\";\nimport SavedBooks from \"./Components/SavedBooks\";\nimport NoMatch from \"./Components/NoMatch\";\nimport Nav from \"./Components/Navbar\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n  return(\n    <Router>\n    <div>\n    <Nav />\n      <Switch>\n        <Route exact path={[\"/\", \"/books\"]} component={SearchBooks} />\n        <Route exact path=\"/SavedBooks\" component={SavedBooks} />\n        <Route component={NoMatch} />\n        </Switch>\n    </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}